{"ast":null,"code":"var _s = $RefreshSig$();\nimport { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nexport const store = configureStore({\n  reducer: {}\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\n\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["configureStore","useDispatch","store","reducer","useAppDispatch","_s"],"sources":["C:/Users/DonoDuong/Desktop/bookingcare/src/redux/store.tsx"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\n\nexport const store = configureStore({\n  reducer: {},\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAClCG,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;;AAEF;;AAEA;;AAEA,OAAO,MAAMC,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMJ,WAAW,CAAc,CAAC;AAAA;AAAAI,EAAA,CAAjDD,cAAc;EAAA,QAASH,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}